library("RSQLite", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages(c("cluster", "rattle", "NbClust"))
library("caTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("DescTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("NbClust", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("rattle")
data(wine, package="rattle")
library("RSQLite", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("rattle")
install.packages("RGtk2")
install.packages("GTK")
install.packages("RGtk")
install.packages("rattle")
install.packages("RGtk2")
library("GGally", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("rattle")
rattle
data(wine, package="rattle")
install.packages(rattle, dependencies=c("Depends", "Suggests"))
install.packages("rattle", repos="http://rattle.togaware.com", type="source")
library(rattle)
View(wine)
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("checkmate", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("class", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("cluster", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ClustOfVar", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("codetools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("corrgram", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("compiler", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("crosstalk", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ctv", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("curl", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("cvTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("dendextend", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("extracat", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("fastmatch", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("fitdistrplus", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("forcats", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("formatR", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("gclus", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("gdata", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ggpmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ggsignif", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("git2r", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("gmodels", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("gplots", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("gtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("gvlma", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("haven", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("Hmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("htmlwidgets", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("idendr0", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ipred", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("jpeg", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("labeling", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("lava", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("lazyeval", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("lemon", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("lmtest", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("lme4", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("manipulate", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("mnormt", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("modeltools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("mvtnorm", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("mvoutlier", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("mvnormtest", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("outliers", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("pastecs", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("patternplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("permute", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("pivottabler", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("plogr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("polycor", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("polynom", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("psych", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("pwr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("readxl", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rematch", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("reshape", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rlang", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rpivotTable", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("sourcetools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("squash", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("splus2R", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("sROC", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("tibble", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("tkrplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("tools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("vcd", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
load("/Users/carlahalsell/My Documents/refine_original.RData")
load("/Users/carlahalsell/My Documents/refine4.RData")
View(Company)
data("wine", package="rattle")
library(readxl)
wine <- read_excel("~/My Documents/wine.xlsx",
sheet = "Sheet2")
View(wine)
rm(Company)
rm(refine_original)
rm(refine2)
rm(refine3)
rm(refine4)
rm(Category)
rm(P2)
rm(P3)
rm(P4)
rm(P5)
rm(P6)
rm(ProductCode)
save.image("wine.RData")
savehistory("wine.Rhistory")
# Due to a dependence upon another package that is not available for my Mac OS revision, I could not load "rattle" package.
# I found the data online, so I hope that the excercises will work correctly.
scale(wine, center=TRUE, scale=TRUE)
View(wine)
wssplot <- function(data, nc=15, seed=1234){wss<- (nrow(data)-1)*sum(apply(data,2,var)) for (i in 2:nc) {set.seed(seed) wss[i] <- sum(kmeans(data, centers=i)$withinss)} plot(1:nc, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")}
wssplot <- function(data, nc=15, seed=1234){wss<- (nrow(data)-1)*sum(apply(data,2,var)) for(i in 2:nc) {set.seed(seed) wss[i] <- sum(kmeans(data, centers=i)$withinss)} plot(1:nc, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")}
wssplot <- function(data, nc=15, seed=1234){wss<- (nrow(data)-1)*sum(apply(data,2,var))for(i in 2:nc) {set.seed(seed) wss[i] <- sum(kmeans(data, centers=i)$withinss)} plot(1:nc, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")}
wssplot <- function(data, nc=15, seed=1234){wss<- (nrow(data)-1)*sum(apply(data,2,var)) for(i in 2:nc) {set.seed(seed) wss[i] <- sum(kmeans(data, centers=i)$withinss)} plot(1:nc, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")}
wssplot <- function(data, nc=15, seed=1234){wss<- (nrow(data)-1)*sum(apply(data,2,var)) for(i in 2:nc){ set.seed(seed) wss[i] <- sum(kmeans(data, centers=i)$withinss)} plot(1:nc, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")}
save.image("wine.RData")
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
wssplot(df)
wssplot(data)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
wssplot(wine)
print(wssplot(wine))
#14-15 clusters showing in plot
save.image("wine.RData")
savehistory("wine.Rhistory")
#5 or 6 clusters showing in plot in the bend of the curve.
# Trying kmeans to compare
library(dplyr)
)
library(dplyr)
set.seed(178) centers<-wine(cluster=factor(1:6), size=c(30,60,90,120,150,178), x1=c(100,0,-100), x2=c(-50,0,50))
set.seed(100) centers<-wine(cluster=factor(1:6), size=c(30,60,90,120,150,178), x1=c(100,0,-100), x2=c(-50,0,50))
set.seed(1234) centers<-wine(cluster=factor(1:6), size=c(30,60,90,120,150,178), x1=c(100,0,-100), x2=c(-50,0,50))
ggplot(wssplot, aes(wine,wssplot, color=cluster)) + geom_point()
summary(wssplot)
set.seed(1234)
nc <- NbClust(df, min.nc=2, max.nc=15, method="kmeans")
barplot(table(nc$Best.n[1,]),
xlab="Numer of Clusters", ylab="Number of Criteria",
main="Number of Clusters Chosen by 26 Criteria")
set.seed(1234)
nc <- NbClust(df, min.nc=2, max.nc=15, method="kmeans")
barplot(table(nc$Best.n[1,]),
xlab="Numer of Clusters", ylab="Number of Criteria",
main="Number of Clusters Chosen by 26 Criteria")
set.seed(1234)
nc <- NbClust(wine, min.nc=2, max.nc=15, method="kmeans")
barplot(table(nc$Best.n[1,]),
xlab="Numer of Clusters", ylab="Number of Criteria",
main="Number of Clusters Chosen by 26 Criteria")
# The winner in NbClust is 2 clusters.
list(nc)
cluster2 <- function(wine, nc=2, seed=1234){
cluster <- (nrow(wine)-1)*sum(apply(wine,2,var))
for (i in 2:nc){
set.seed(seed)
cluster[i] <- sum(kmeans(wine, centers=i)$withinss)}
plot(1:nc, cluster, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
cluster2 <- function(wine, nc=2, seed=1234){
cluster <- (nrow(wine)-1)*sum(apply(wine,2,var))
for (i in 2:nc){
set.seed(seed)
cluster[i] <- sum(kmeans(wine, centers=i)$withinss)}
plot(1:nc, cluster, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
cluster(wine)
fit.km <- kmeans(wine,2,iter.max=10, nstart=1,algorithm=c("Hartigan-Wong", "Lloyd", "Forgy", "MacQueen"), trace=FALSE)
summary(fit.km)
table(fit.km)
table(fit.km$clusters,wine$Type)
table(fit.km$clusters,nc$Type)
table(fit.km$clusters,wine$Type)
# There is no wine$Type in the file I loaded.
View(wine)
clusplot(fit.km$clusters)
clusplot(fit.km)
clusplot(cluster2)
clusplot(nc
clusplot(nc)
clusplot(pam(wine,2))
clusplot(fanny(wine,2))
clusplot(clara(wine,2))
clusplot(clara(cluster2,2))
clusplot(clara(fit.km,2))
clusplot(clara(wssplot,2))
# There is a lot of overlap in the 2 clusters.
clusplot(clara(wine,3))
clusplot(clara(wine,4))
clusplot(clara(wine,5))
clusplot(clara(wine,2))
clusplot(clara(wine,15))
clusplot(clara(wine,2))
library(readxl)
wine <- read_excel("~/My Documents/wine.xlsx",
sheet = "Sheet4")
View(wine)
install.packages("rattle")
scale(wine)
wssplot <- function(wine, nc=15, seed=1234){
wss <- (nrow(wine)-1)*sum(apply(wine,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(wine, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
wssplot(wine)
# The plot shows 5-6 clusters.
set.seed(1234)
nc <- NbClust(wine, min.nc=2, max.nc=15, method="kmeans")
barplot(table(nc$Best.n[1,]),
xlab="Numer of Clusters", ylab="Number of Criteria",
main="Number of Clusters Chosen by 26 Criteria")
# This method suggests 2 clusters.
fit.km <- kmeans(wine, 2, iter.max=15, nstart=2, algorithm=c("Hartigan-Wong", "Lloyd", "Forgy", "MacQueen"), trace=FALSE)
table(wine$class,fit.km$clusters)
table(wine$class,fit.km$clusters, useNA="ifany")
summary(wine$class)
summary(km.fit$clusters)
summary(fit.km$clusters)
summary(fit.km)
clusplot(wine)
clusplot(pam(wine,2)
clusplot(pam(wine,2))
clusplot(pam(wine,5))
clusplot(pam(wine,10))
clusplot(pam(wine,3))
clusplot(pam(wine,2))
df <- scale(wine[-1])
wssplot(df)
set.seed(1234)
nc<- NbClust(df, min.nc=2, max.nc=15, method="kmeans")
table(nc$Best.n[1,])
barplot(table(nc$Best.n[1,]), xlab="Number of Clusters", ylab="Number of Criteria", main="Number of Clusters Chosen by 26 Criteria")
set.seed(1234)
fit.km <- kmeans(df, 3, nstart=25)
fit.km$size
fit.km$centers
aggregate(wine[-1], by=list(cluster=fit.km$cluster), mean)
ct.km <- table(wine$class, fit.km$cluster)
ct.km
randIndes(ct.km)
library(flexclust)
install.packages("flexclust")
randIndes(ct.km)
library(flexclust)
library("flexclust", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
randIndex(ct.km)
detach("package:fitdistrplus", unload=TRUE)
randIndex(ct.km)
detach("package:extracat", unload=TRUE)
detach("package:fastmatch", unload=TRUE)
randIndex(ct.km)
library(flexclust)
# Due to not being able to load "rattle", I went to the original weblink and used what I found between both sets of instructions.
save.image("cluster.RData")
savehistory("cluster.Rhistory")
rm(cluster2)
rm(wssplot)
rm(nc)
rm(fit.km)
rm(ct.km)
rm(wine)
rm(df)
load("~/GitHub/Cybersecurity.RData")
View(Cybersecurity)
rm(Cybersecurity)
rm(cybersecurity_1)
load("~/My Documents/Cybersecurity.RData")
View(cybersecurity_questions)
View(Cybersecuritymeans)
install.packages("randomforest")
install.packages("randomForest")
library("abind", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("assertthat", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("BH", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("bit", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("broom", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("caTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("class", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("cluster", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ClustOfVar", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("codetools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("corrgram", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("crosstalk", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("cvTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("DBI", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("dendextend", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("DescTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("diptest", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("extracat", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("fastmatch", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("fitdistrplus", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ffbase", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("flexmix", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("forcats", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("formatR", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("fpc", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("gdata", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("GGally", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ggpmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("ggsignif", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("git2r", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("gmodels", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("gplots", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("gtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("gvlma", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("Hmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("idendr0", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("labeling", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("lava", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("lemon", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("lmtest", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("manipulate", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("mnormt", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("mvoutlier", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("mvtnorm", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("mvnormtest", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("NbClust", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("outliers", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("patternplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("pivottabler", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("plotly", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("psych", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("randomForest", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("readxl", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rematch", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rlang", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rpivotTable", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("squash", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("stringi", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("survey", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("tibble", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
set.seed(71)
cybersecurity.rf <- randomForest(agegroup ~., data=Cybersecuritymeans, importance=TRUE, proximity=TRUE)
cybersecurity.rf <- randomForest(agerecage ~., data=Cybersecuritymeans, importance=TRUE, proximity=TRUE)
cybersecurity.rf <- randomForest(recage ~., data=Cybersecuritymeans, importance=TRUE, proximity=TRUE)
cybersecurity.rf <- randomForest(recage ~., data=Cybersecuritymeans, importance=TRUE, proximity=TRUE, na.action = na.omit)
set.seed(1)
cyber.rf <- randomeForest(recage ~ ., data=Cybersecuritymeans), mtry=3, importance=TRUE, na.action=na.omit)
cyber.rf <- randomeForest(recage ~ ., data=Cybersecuritymeans, mtry=3, importance=TRUE, na.action=na.omit)
cyber.rf <- randomForest(recage ~ ., data=Cybersecuritymeans, mtry=3, importance=TRUE, na.action=na.omit)
y
cyber.rf <- randomForest(age ~ ., data=Cybersecuritymeans, mtry=3, importance=TRUE, na.action=na.omit)
cyber.rf <- randomForest(age ~ ., data=Cybersecuritymeans, mtry=3, importance=TRUE, na.rm )
cyber.rf <- randomForest(age ~ ., data=Cybersecuritymeans, mtry=3, importance=TRUE, na.action=na.pass)
cyber.rf <- randomForest(intfreq ~ ., data=Cybersecuritymeans, mtry=3, importance=TRUE, na.action=na.pass)
cyber.rf <- randomForest(age ~ ., data=Cybersecuritymeans, mtry=3, importance=TRUE, na.action=na.omit)
set.seed(50)
cyber.rf <- randomForest(intfreq ~ ., data=Cybersecuritymeans, mtry=3, importance=TRUE, na.action=na.pass)
set.seed(1)
cyber.rf <- randomForest(Cybersecuritymeans[3:12], Cybersecuritymeans$agegroup)
cyber.rf <- randomForest(Cybersecuritymeans[3:12], Cybersecuritymeans$agegroup, na.action=na.pass)
cyber.rf <- randomForest(Cybersecuritymeans[3:12], Cybersecuritymeans$agegroup, na.action=na.omit)
cyber.rf <- randomForest(Cybersecuritymeans[3:12], Cybersecuritymeans$age, na.action=na.omit)
cyber.rf <- randomForest(Cybersecuritymeans[6:12], Cybersecuritymeans$age, na.action=na.omit)
cyber.rf <- randomForest(Cybersecuritymeans[10:20], Cybersecuritymeans$age, na.action=na.omit)
cyber.rf <- randomForest([5:10], Cybersecuritymeans, na.action=na.omit)
cyber.rf <- randomForest(qc1, Cybersecuritymeans, na.action=na.omit)
cyber.rf <- randomForest(Cybersecuritymeans$qc1, Cybersecuritymeans, na.action=na.omit)
cyber.rf <- randomForest(Cybersecuritymeans$agegroup, Cybersecuritymeans, na.action=na.omit)
cyber.rf <- randomForest(Cybersecuritymeans$q1, Cybersecuritymeans, na.action=na.omit)
cyber.rf <- randomForest(Cybersecuritymeans$age, Cybersecuritymeans, na.action=na.omit)
set.seed(1234)
data(Cybersecuritymeans)
cyber.rf <- randomForest(recage ~., data=Cybersecuritymeans, ntree=100, keep.forest=FALSE, importance=TRUE)
cyber.rf <- randomForest(recage ~., data=Cybersecuritymeans, ntree=100, keep.forest=FALSE, importance=TRUE, na.action=pass)
cyber.rf <- randomForest(recage ~., data=Cybersecuritymeans, ntree=100, keep.forest=FALSE, importance=TRUE, na.action=na.pass)
cyber.rf <- randomForest(recage ~., data=Cybersecuritymeans, ntree=10, keep.forest=FALSE, importance=TRUE, na.action=na.pass)
cyber.rf <- randomForest(recage ~., data=Cybersecuritymeans, ntree=10, keep.forest=FALSE, importance=TRUE, na.action=na.omit)
cyber.rf <- randomForest(age ~., data=Cybersecuritymeans, ntree=10, keep.forest=FALSE, importance=TRUE, na.action=na.omit)
cyber.rf <- randomForest(qc1 ~., data=Cybersecuritymeans, ntree=10, keep.forest=FALSE, importance=TRUE, na.action=na.omit)
cyber.rf <- randomForest(qc1 ~., sort=TRUE, n.var=min(1, nrow(Cybersecuritymeans$sample)), main=PLOT, data=Cybersecuritymeans, ntree=10, keep.forest=FALSE, importance=TRUE, na.action=na.omit)
cyber.rf <- randomForest(qc1 ~., sort=TRUE, n.var=min(1, nrow(Cybersecuritymeans$sample)), data=Cybersecuritymeans, ntree=10, keep.forest=FALSE, importance=TRUE, na.action=na.omit)
set.seed(131)
cyber.rf <- randomForest(recage ~., data=Cybersecuritymeans, mtry=3, importance=TRUE, na.action=na.omit)
cyber.rf <- randomForest(recage ~., data=cyberseclm1, mtry=3, importance=TRUE, na.action=na.omit)
cyber.rf <- randomForest(agexact.fit() ~., data=Cybersecuritymeans, mtry=3, importance=TRUE, na.action=na.omit)
cyber.rf <- randomForest(age ~., data=Cybersecuritymeans, mtry=3, importance=TRUE, na.action=na.omit)
cyber.rf <- randomForest(age ~., data=Cybersecuritymeans, mtry=3, type=classification,importance=TRUE, na.action=na.omit)
cyber.rf <- randomForest(qc1 ~., data=Cybersecuritymeans, mtry=3, type=classification,importance=TRUE, na.action=na.omit)
cyber.rf <- randomForest(age ~., data=Cybersecuritymeans, mtry=3, type=classification,importance=TRUE, na.action=na.omit)
train.rf <- randomForest(recage~marital+hh1+qc1+intfreq+habits2+habits3+habits7+habits9+habits10+wifi2a+wifi2b+policy2a+policy3+policy4+policy6e, data=Train, importance=TRUE, na.action=na.omit)
importance(train.rf)
importance(train.rf, sort=TRUE)
importance(train.rf, type=1)
plot(rain.rf)
plot(train.rf)
importance(train.rf, sort=TRUE)
MDSplot(train.rf, Train$agegroup)
MDSplot(train.rf)
round(importance(train.rf), 2)
hist(treesize(train.rf))
varImpPlot(train.rf)
hist(treesize(train.rf))
predict(train.rf, newdata=Test,type="response", norm.votes=TRUE, predict.all=FALSE,proximity=TRUE,nodes=FALSE)
predict(train.rf, newdata=Test,type="response", norm.votes=TRUE, predict.all=FALSE,proximity=TRUE)
predict(train.rf, newdata=Test,type="response", predict.all=FALSE,proximity=TRUE)
cyber.rf.predict <- predict(train.rf, newdata=Test,type="response", predict.all=FALSE,proximity=TRUE)
cyber.rf.predict <- predict(train.rf, newdata=Test, predict.all=TRUE,proximity=TRUE)
cyber.rf.predict <- predict(train.rf,Test, predict.all=TRUE,proximity=TRUE)
cyber.rf.predict <- predict(train.rf,newdata=Test, predict.all=TRUE,proximity=TRUE)
cyber.rf.predict <- predict(train.rf,newdata=Test)
print(cyber.rf.predict)
varImpPlot(cyber.rf.predict)
hist(treesize(cyber.rf.predict))
hist(cyber.rf.predict)
MDSplot(cyber.rf.predict)
summary(cyber.rf.predict)
describe(cyber.rf.predict)
Desc(cyber.rf.predict, plotit=T)
test.rf <- randomForest(recage~marital+hh1+qc1+intfreq+habits2+habits3+habits7+habits9+habits10+wifi2a+wifi2b+policy2a+policy3+policy4+policy6e, data=Test, importance=TRUE, na.action=na.omit)
importance(test.rf)
hist(treesize(test.rf))
Desc(test.rf, plotit=T)
varImpPlot(test.rf)
chisq.test(test.rf)
chisq.test(cyber.rf.predict)
describe(test.rf)
summary(test.rf)
print(test.rf)
print(train.rf)
save.image("Cybersecurity.RData")
savehistory("Cybersecurity.Rhistory")
plot(test.rf, type="1")
plot(test.rf)
nacountbyrow <- rowSums(is.na(Cybersecuritymeans))
Cybersecuritymeans$nacountbyrow <- apply(Cybersecuritymeans,1,rowSums(is.na(Cybersecuritymeans)))
nacountbyrow <- apply(Cybersecuritymeans)
Cybersecuritymeans$nacountbyrow <- nacountbyrow
View(Cybersecuritymeans)
hist(Cybersecuritymeans$nacountbyrow)
ggplot(Cybersecuritymeans,aes(agegroup,nacountbyrow)) + geom_line()
ggplot(Cybersecuritymeans,aes(agegroup,nacountbyrow)) + geom_col()
ggplot(Cybersecuritymeans,aes(agegroup,mean(nacountbyrow)) + geom_col()
ggplot(Cybersecuritymeans,aes(agegroup,mean(nacountbyrow)) + geom_scatter
ggplot(Cybersecuritymeans,aes(agegroup,mean(nacountbyrow)) + geom_count()
ggplot(Cybersecuritymeans,aes(agegroup,mean(nacountbyrow)) + geom_boxplot()
ggplot(Cybersecuritymeans,aes(agegroup,mean(nacountbyrow)) + geom_histogram()
ggplot(Cybersecuritymeans,aes(agegroup,nacountbyrow) + geom_histogram()
ggplot(Cybersecuritymeans,aes(agegroup,nacountbyrow)) + geom_histogram()
ggplot(Cybersecuritymeans,aes(agegroup,nacountbyrow)) + geom_bar()
ggplot(Cybersecuritymeans,aes(agegroup,nacountbyrow)) + geom_col()
hist(Cybersecuritymeans,agegroup, nacountbyrow)
hist(Cybersecuritymeans,Cybersecuritymeans$agegroup, nacountbyrow)
hist(Cybersecuritymeans, nacountbyrow)
summary(Cybersecuritymeans)
>qplot(agegroup, nacountbyrow, data=Cybersecuritymeans, geom=c("boxplot", "jitter"), fill=agegroup, main= "Significant Variables NA's per Person", xlab="Agegroup", ylab="Responses for NA Count")
qplot(agegroup, nacountbyrow, data=Cybersecuritymeans, geom=c("boxplot", "jitter"), fill=agegroup, main= "Significant Variables NA's per Person", xlab="Agegroup", ylab="Responses for NA Count")
cyberseclm1 <- lm(recage~nacountcountbyrow+marital+par+emplnw3+hh1+qc1+intfreq+acct2+habits2+habits3+habits7+habits9+habits10+wifi2a+wifi2b+policy2a+policy3+policy4+policy6e, data=Cybersecuritymeans)
cyberseclm1 <- lm(recage~nacountbyrow+marital+par+emplnw3+hh1+qc1+intfreq+acct2+habits2+habits3+habits7+habits9+habits10+wifi2a+wifi2b+policy2a+policy3+policy4+policy6e, data=Cybersecuritymeans)
summary(cyberseclm1)
cyberseclm1 <- lm(recage~marital+par+emplnw3+hh1+qc1+intfreq+acct2+habits2+habits3+habits7+habits9+habits10+wifi2a+wifi2b+policy2a+policy3+policy4+policy6e, data=Cybersecuritymeans)
summary(cyberseclm1)
total.rf <- randomForest(recage~marital+hh1+qc1+intfreq+habits2+habits3+habits7+habits9+habits10+wifi2a+wifi2b+policy2a+policy3+policy4+policy6e+nacountbyrow, data=Train, importance=TRUE, na.action=na.omit)
total.rf <- randomForest(recage~marital+hh1+qc1+intfreq+habits2+habits3+habits7+habits9+habits10+wifi2a+wifi2b+policy2a+policy3+policy4+policy6e+nacountbyrow, data=Cybersecuritymeans, importance=TRUE, na.action=na.omit)
importance(total.rf)
importance(total.rf, sort((%IncMSE)))
importance(total.rf, sort(("%IncMSE")))
importance(total.rf, sort(("%IncMSE")=TRUE))
summary(Cybersecuritymeans)
save.image("Cybersecurity.RData")
savehistory("Cybersecurity.Rhistory")
